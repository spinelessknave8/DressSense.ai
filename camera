import React, { useState, useEffect } from 'react';
import { Button, Image, View, Platform } from 'react-native';
import * as ImagePicker from 'expo-image-picker';
import { Camera } from 'expo-camera';

export default function ImagePickerExample() {
  const [image, setImage] = useState(null);
  const [cameraPermission, setCameraPermission] = useState(null);
  const [camera, setCamera] = useState(null);

  useEffect(() => {
    (async () => {
      const { status } = await Camera.requestPermissionsAsync();
      setCameraPermission(status === 'granted');
    })();
  }, []);

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.All,
      allowsEditing: true,
      aspect: [4, 3],
      quality: 1,
      maxWidth: 400,
      maxHeight: 400
    });

    if (!result.cancelled) {
      setImage(result.assets[0].uri);
    }
  };

  const takePhoto = async () => {
    if (cameraPermission) {
      let photo = await camera.takePictureAsync();
      setImage(photo.uri);
    } else {
      console.log("Camera permission not granted.");
    }
  };

  return (
  <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end' }}>
    {cameraPermission && (
      <Camera
        style={{ flex: 1, width: '100%' }}
        type={Camera.Constants.Type.back}
        ref={(ref) => setCamera(ref)}
      />
    )}
    {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}
    <Button title="Pick an image from camera roll" onPress={pickImage} />
    <Button title="Take a photo" onPress={takePhoto} />
  </View>
);

}
