import React, { useState, useEffect } from 'react';
import { TouchableOpacity, Text, Image, View, StyleSheet } from 'react-native';
import * as ImagePicker from 'expo-image-picker';
import { Camera } from 'expo-camera';
import { Ionicons } from '@expo/vector-icons';

export default function ImagePickerExample() {
  const [image, setImage] = useState(null);
  const [cameraPermission, setCameraPermission] = useState(null);
  const [camera, setCamera] = useState(null);

  useEffect(() => {
    (async () => {
      const { status } = await Camera.requestPermissionsAsync();
      setCameraPermission(status === 'granted');
    })();
  }, []);

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.All,
      allowsEditing: true,
      aspect: [5, 3],
      quality: 1,
      maxWidth: 400,
      maxHeight: 400
    });

    if (!result.cancelled) {
      setImage(result.assets[0].uri);
    }
  };

  const takePhoto = async () => {
    if (cameraPermission) {
      let photo = await camera.takePictureAsync();
      setImage(photo.uri);
    } else {
      console.log("Camera permission not granted.");
    }
  };

  const styles = StyleSheet.create({
  buttonBox: {
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 10,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: 'black',
    backgroundColor: 'black',
    width: 70, // Adjust the width as needed for the text button
    height: 70, // Make height same as width for the camera icon button, adjust for the text button
    alignSelf: 'center',
  },
  buttonBox2:{
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 10,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: 'black',
    backgroundColor: 'black',
    width: 300, 
    height: 40, 
    alignSelf: 'center',
  },
  buttonText: {
    color: 'white',
    padding: 10, 
    textAlign: 'center', 

  },
  icon: {
    color: 'white',
  },
});

  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-end' }}>
      {cameraPermission && (
        <Camera
          style={{ flex: 1, width: '100%' }}
          type={Camera.Constants.Type.back}
          ref={(ref) => setCamera(ref)}
        />
      )}
      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}
      <TouchableOpacity style={styles.buttonBox} onPress={takePhoto}>
        <Ionicons name="camera" size={32} style={styles.icon} />
      </TouchableOpacity>
      <TouchableOpacity style={styles.buttonBox2} onPress={pickImage}>
        <Text style={styles.buttonText}>Choose an image from your photo gallery</Text>
      </TouchableOpacity>
    </View>
  );
}
